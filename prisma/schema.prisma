generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Carousel {
  id              String        @id @default(cuid())
  title           String
  description     String
  image           String
  buttonText      String
  buttonLink      String
  type            SectionType
  order           Int
  showButtons     Boolean       @default(true)
  contentPosition String        @default("center")
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  cropData        Json?
  fileId          String?
  file            FileMetadata? @relation(fields: [fileId], references: [id])
}

model Card {
  id          String        @id @default(cuid())
  title       String
  description String
  imageUrl    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  order       Int           @default(0)
  type        SectionType   @default(HOME)
  cropData    Json?
  fileId      String?
  file        FileMetadata? @relation(fields: [fileId], references: [id])
}

model Section {
  id          String        @id @default(cuid())
  title       String
  description String
  imageUrl    String
  imageLeft   Boolean       @default(true)
  type        SectionType   @default(HOME)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  order       Int           @default(0)
  cropData    Json?
  fileId      String?
  file        FileMetadata? @relation(fields: [fileId], references: [id])
}

model FileMetadata {
  id           String     @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  width        Int?
  height       Int?
  path         String     @unique
  url          String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  cards        Card[]
  carousels    Carousel[]
  sections     Section[]

  @@index([path])
}

model Content {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  type      String   @default("text")
  section   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(1)

  @@index([section, key])
}

model ContentHistory {
  id        String   @id @default(cuid())
  contentId String
  value     String
  updatedBy String
  createdAt DateTime @default(now())
  version   Int
}

enum SectionType {
  HOME
  SERIGRAPHIE
  BRODERIE
  IMPRESSION
  FLOCAGE
  OBJETS_PUBLICITAIRES
  IMPRIMERIE
  ENSEIGNES
}
